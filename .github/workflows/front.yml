name: front-api

on: [push]

jobs:
  build:
    name: Build front api
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: front/node_modules
          key: ${{ runner.OS }}-${{ matrix.node-version}}-node-modules-${{ hashFiles('front/yarn.lock') }}

      - name: Install Dependencies
        run: |
          cd front
          yarn install

      - name: Build
        run: |
          cd front
          CI=false yarn build

  publish:
    name: Build and publish
    env:
      IMAGE: arkhn/front-api
    runs-on: ubuntu-18.04
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1

      - name: Build dev, staging and demo
        run: |
          cd front/
          yarn build:docker:dev
          yarn build:docker:staging
          yarn build:docker:demo

      - name: Build Ambroise
        env:
          IP: ${{ secrets.IP_VM_AMB }}
          STAGE: ambroise
        run: |
          cd front/
          ./scripts/generate_client_env.sh > .env.ambroise
          docker build -t arkhn/front-api:ambroise --build-arg ENV_FILE=.env.ambroise .

      - name: Build AP
        env:
          IP: ${{ secrets.IP_VM_AP }}
          STAGE: aphp
        run: |
          cd front/
          ./scripts/generate_client_env.sh > .env.aphp
          docker build -t arkhn/front-api:aphp --build-arg ENV_FILE=.env.aphp .

      - name: Build Clb
        env:
          IP: ${{ secrets.IP_VM_CLB }}
          STAGE: clb
        run: |
          cd front/
          ./scripts/generate_client_env.sh > .env.clb
          docker build -t arkhn/front-api:clb --build-arg ENV_FILE=.env.clb .

      - name: Build Curie
        env:
          IP: ${{ secrets.IP_VM_CURIE }}
          STAGE: curie
        run: |
          cd front/
          ./scripts/generate_client_env.sh > .env.curie
          docker build -t arkhn/front-api:curie --build-arg ENV_FILE=.env.curie .

      - name: Build RMS
        env:
          IP: ${{ secrets.IP_VM_REIMS }}
          STAGE: rms
        run: |
          cd front/
          ./scripts/generate_client_env.sh > .env.rms
          docker build -t arkhn/front-api:rms --build-arg ENV_FILE=.env.rms .

      - name: Publish to the docker hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" |  docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
          docker push $IMAGE:dev
          docker push $IMAGE:staging
          docker push $IMAGE:demo
          docker push $IMAGE:ambroise
          docker push $IMAGE:aphp
          docker push $IMAGE:clb
          docker push $IMAGE:curie
          docker push $IMAGE:rms
