name: fhir-api

on: push

jobs:
  lint:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - run: |
          python -m pip install --upgrade pip
          pip install flake8
      - run: |
          flake8 fhir-api --config=fhir-api/.flake8 --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 fhir-api --config=fhir-api/.flake8 --count --max-complexity=10 --max-line-length=100 --statistics

  build:
    needs: lint
    runs-on: ubuntu-18.04

    outputs:
      tags: ${{ steps.metadata.outputs.tags }}

    steps:
      - id: metadata
        run: |
          IMAGE=arkhn/fhir-api
          VERSION=noop
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ "${GITHUB_REF}" == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          fi
          TAGS="${IMAGE}:${VERSION},${IMAGE}:${GITHUB_SHA::8}"
          if [[ "${GITHUB_REF}" == refs/heads/master ]] && [[ "${VERSION}" =~ ^v[0-9]{1,3}(\.[0-9]{1,3}(\.[0-9]{1,3})?)?$ ]]; then
            TAGS="${TAGS},${IMAGE}:latest"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/build-push-action@v2
        with:
          context: fhir-api
          file: ./fhir-api/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: |
            com.arkhn.image.title=fhir-api
            com.arkhn.image.description=${{ github.event.repository.description }}
            com.arkhn.image.url=${{ github.event.repository.html_url }}
            com.arkhn.image.source=${{ github.event.repository.clone_url }}
            com.arkhn.image.version=${{ steps.metadata.outputs.version }}
            com.arkhn.image.created=${{ steps.metadata.outputs.created }}
            com.arkhn.image.revision=${{ github.sha }}
            com.arkhn.image.licenses=${{ github.event.repository.license.spdx_id }}

  tests:
    needs: build
    runs-on: ubuntu-18.04

    steps:
      - run: |
          IMAGE=$(echo ${{ needs.build.outputs.tags }} | cut -f1 -d,)
          docker pull ${IMAGE}
          docker run --entrypoint=pytest ${IMAGE}
